name: "build"
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  build-linux-x86_64-extension:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
      - run: make loadable
      - run: make test-loadable
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-linux-x86_64-extension
          path: dist/*
  build-linux-aarch64-extension:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
      - run: make loadable
      - run: make test-loadable
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-linux-aarch64-extension
          path: dist/*
  build-macos-x86_64-extension:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
      - run: make loadable
      - run: make test-loadable
        env:
          # MacOS Python block SQLite extension, so use homebrew's python (ez mode)
          UV_PYTHON: /usr/local/opt/python@3/libexec/bin/python
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-macos-x86_64-extension
          path: dist/*
  build-macos-aarch64-extension:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
      - run: make loadable
      - run: make test-loadable
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-macos-aarch64-extension
          path: dist/*
  build-windows-x86_64-extension:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: astral-sh/setup-uv@v5
      - run: make loadable
      - run: make test-loadable
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-windows-x86_64-extension
          path: dist/*
  build-wasm32-emscripten:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: "latest"
      - run: make sqlite-tg.h
      - run: make wasm
      - uses: actions/upload-artifact@v4
        with:
          name: sqlite-tg-wasm32-emscripten
          path: dist/*
          include-hidden-files: true
  test-windows-rust:
    strategy:
      matrix:
        include:
          #- os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          default: true
      - run: make sqlite-tg.h
      - run: make deps
        working-directory: ./bindings/rust
      - run: cargo test
        env: 
            CARGO_BUILD_TARGET: x86_64-pc-windows-gnu
        working-directory: ./bindings/rust